/**
 * Static class that will be automatically generated using the Resources/ChestConventions.xml file
 */
#ifndef CIP_CIPCHESTCONVENTIONSXMLAUTOGENERATED_H
#define CIP_CIPCHESTCONVENTIONSXMLAUTOGENERATED_H

namespace cip {
/**
 * Note that ChestRegions are sorted hierarchically via the HierarchyMap structure
 */
    enum ChestRegion {
//##CHEST_REGION_ENUM##
    };

/**
 *  Some notes about the types below. Segmental bronchi are considered
 *  generation 3, sub-segmental are considered generation 4, etc.
 */
    enum ChestType {
//##CHEST_TYPE_ENUM##
    };

    enum ImageFeature {
//##IMAGE_FEATURE_ENUM##
    };

    enum ReturnCode {
//##RETURN_CODE_ENUM##
    };

    typedef std::pair<unsigned char, unsigned char> Region_Pair;

    class ChestConventionsStatic
    {

    public:
        ChestConventionsStatic(){
            BuildStructures();
        }
        ~ChestConventionsStatic(){
            for ( unsigned int i=0; i<ChestRegionColors.size(); i++ )
            {
                delete[] ChestRegionColors[i];
            }

            for ( unsigned int i=0; i<ChestTypeColors.size(); i++ )
            {
                delete[] ChestTypeColors[i];
            }
        }

        std::vector< unsigned char >              ChestRegions;
        std::vector< unsigned char >              ChestTypes;
        std::vector< unsigned char >              ImageFeatures;
        std::vector< std::string >                ChestRegionNames;
        std::vector< std::string >                ChestTypeNames;
        std::vector< std::string >                ImageFeatureNames;
        std::vector< double* >                    ChestRegionColors;
        std::vector< double* >                    ChestTypeColors;
        std::map< unsigned char, unsigned char >  ChestRegionHierarchyMap;
        std::vector< std::string >  BodyCompositionPhenotypeNames;
        std::vector< std::string >  ParenchymaPhenotypeNames;
        std::vector< std::string >  HistogramPhenotypeNames;
        std::vector< std::string >  PulmonaryVasculaturePhenotypeNames;
    private:
        void BuildStructures() {
            // Structures that will be automatically generated
//##STRUCTURES##
        }
    };
}

#endif //CIP_CIPCHESTCONVENTIONSXMLAUTOGENERATED_H


